#include<bits/stdc++.h>
using namespace std;

bool isSafe(int col,int row,vector<string> board,int n){
    int x = row;
    int y=col;
    while(y>=0){
        if(board[x][y] =='Q') 
            return false;
        --y;
    }
    x=row;
    y=col;
    while(y>=0 && x>=0){
        if(board[x][y] == 'Q')
            return false;
        --y;
        --x;
    }
    x=row;
    y=col;
    while(y>=0 && x<n){
        if(board[x][y] == 'Q')
            return false;
        
        ++x;
        --y;
    }
    return true;
}


void solve(int col,vector<string> board,vector<vector<string>> &ans,int n){
    //base case
    if(col == n){
        ans.push_back(board);
        return;
    }

    for(int rows=0;rows<n;++rows){
        if(isSafe(col,rows,board,n)){
            board[rows][col] = 'Q';
            solve(col+1,board,ans,n);
            board[rows][col]='.';
        }
    }
}

vector<vector<string>> queen(int n){
    vector<vector<string>> ans;
    string s(n,'.');
    vector<string> board(n);
    for(int i =0;i<n;++i){
        board[i] = s;
    }
    solve(0,board,ans,n);
    return ans;
}

int main(){
    
    vector<vector<string>> v = queen(4);
    for(auto ar:v){
        cout<<"[";
        for(auto it:ar){
            cout<<it <<",";
        }
        cout<<"]";
    }
    return 0;
}
